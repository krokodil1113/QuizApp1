package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class QuizAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuizAllPropertiesEquals(Quiz expected, Quiz actual) {
        assertQuizAutoGeneratedPropertiesEquals(expected, actual);
        assertQuizAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuizAllUpdatablePropertiesEquals(Quiz expected, Quiz actual) {
        assertQuizUpdatableFieldsEquals(expected, actual);
        assertQuizUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuizAutoGeneratedPropertiesEquals(Quiz expected, Quiz actual) {
        assertThat(expected)
            .as("Verify Quiz auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuizUpdatableFieldsEquals(Quiz expected, Quiz actual) {
        assertThat(expected)
            .as("Verify Quiz relevant properties")
            .satisfies(e -> assertThat(e.getTitle()).as("check title").isEqualTo(actual.getTitle()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getDifficultyLevel()).as("check difficultyLevel").isEqualTo(actual.getDifficultyLevel()))
            .satisfies(e -> assertThat(e.getIsPublished()).as("check isPublished").isEqualTo(actual.getIsPublished()))
            .satisfies(e -> assertThat(e.getPublishDate()).as("check publishDate").isEqualTo(actual.getPublishDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuizUpdatableRelationshipsEquals(Quiz expected, Quiz actual) {
        assertThat(expected)
            .as("Verify Quiz relationships")
            .satisfies(e -> assertThat(e.getQuizAnalytics()).as("check quizAnalytics").isEqualTo(actual.getQuizAnalytics()))
            .satisfies(e -> assertThat(e.getCreator()).as("check creator").isEqualTo(actual.getCreator()))
            .satisfies(e -> assertThat(e.getCategory()).as("check category").isEqualTo(actual.getCategory()));
    }
}
