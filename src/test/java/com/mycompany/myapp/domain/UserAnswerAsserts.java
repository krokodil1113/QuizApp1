package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class UserAnswerAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserAnswerAllPropertiesEquals(UserAnswer expected, UserAnswer actual) {
        assertUserAnswerAutoGeneratedPropertiesEquals(expected, actual);
        assertUserAnswerAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserAnswerAllUpdatablePropertiesEquals(UserAnswer expected, UserAnswer actual) {
        assertUserAnswerUpdatableFieldsEquals(expected, actual);
        assertUserAnswerUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserAnswerAutoGeneratedPropertiesEquals(UserAnswer expected, UserAnswer actual) {
        assertThat(expected)
            .as("Verify UserAnswer auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserAnswerUpdatableFieldsEquals(UserAnswer expected, UserAnswer actual) {
        assertThat(expected)
            .as("Verify UserAnswer relevant properties")
            .satisfies(e -> assertThat(e.getCustomAnswerText()).as("check customAnswerText").isEqualTo(actual.getCustomAnswerText()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserAnswerUpdatableRelationshipsEquals(UserAnswer expected, UserAnswer actual) {
        assertThat(expected)
            .as("Verify UserAnswer relationships")
            .satisfies(e -> assertThat(e.getAttempt()).as("check attempt").isEqualTo(actual.getAttempt()))
            .satisfies(e -> assertThat(e.getQuestion()).as("check question").isEqualTo(actual.getQuestion()))
            .satisfies(e -> assertThat(e.getSelectedAnswer()).as("check selectedAnswer").isEqualTo(actual.getSelectedAnswer()));
    }
}
