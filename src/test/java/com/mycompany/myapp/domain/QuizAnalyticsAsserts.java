package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class QuizAnalyticsAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuizAnalyticsAllPropertiesEquals(QuizAnalytics expected, QuizAnalytics actual) {
        assertQuizAnalyticsAutoGeneratedPropertiesEquals(expected, actual);
        assertQuizAnalyticsAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuizAnalyticsAllUpdatablePropertiesEquals(QuizAnalytics expected, QuizAnalytics actual) {
        assertQuizAnalyticsUpdatableFieldsEquals(expected, actual);
        assertQuizAnalyticsUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuizAnalyticsAutoGeneratedPropertiesEquals(QuizAnalytics expected, QuizAnalytics actual) {
        assertThat(expected)
            .as("Verify QuizAnalytics auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuizAnalyticsUpdatableFieldsEquals(QuizAnalytics expected, QuizAnalytics actual) {
        assertThat(expected)
            .as("Verify QuizAnalytics relevant properties")
            .satisfies(e -> assertThat(e.getTotalAttempts()).as("check totalAttempts").isEqualTo(actual.getTotalAttempts()))
            .satisfies(e -> assertThat(e.getAverageScore()).as("check averageScore").isEqualTo(actual.getAverageScore()))
            .satisfies(e -> assertThat(e.getCompletionRate()).as("check completionRate").isEqualTo(actual.getCompletionRate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuizAnalyticsUpdatableRelationshipsEquals(QuizAnalytics expected, QuizAnalytics actual) {}
}
